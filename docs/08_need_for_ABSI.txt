                
                    Need for an interfaces to
                    Amagi broadcast services
                    =========================

        +---------+---------------+-----------------------------------+
        |Version  |  Date         |  Comment                          |
        +---------+---------------+-----------------------------------+
        |0.1      |  22/jun/2021  |  Initial draft                    |
        |         |               |  after discussion with Shashi     |
        +---------+---------------+-----------------------------------+

A. Desirable properties

    * Simplicity
    * Clarity
    * Usability

    Simplicity via command line 
        * to provide an incisive way to exercise a service
            * internally by teams
            * externally by clients
        * to hide implementation complexities
        * time tested way

    Clarity via data model 
        * to expose syntactic and semantic vocabulary of services
        * in standard formats (xml/json/yaml)
        * with easy parsing through available tools

    Usability through command line
        * to be driven by the edge users and NOT by development
        * Users
            * external clients
            * internal teams at amagi
                * qualification
                * onboarding
                    * staging
                * operations
                    * monitoring
                    * trouble shooting
                    * upgrades
                * GUI interfaces
                * customization 

B. Requirements

    The command line with associated data model and vocabulary
    must address the following:

    * lifecycle related
        * startup
        * provisioning/configuration
        * restart
        * shutdown

    * service and component information related
        * version
        * active resource summary
        * documentation links

    * deployment readiness related
        * version checks
        * configuration checks
        * component self tests

    * telemetry related
        * logs
            * structure and semantics
        * metrics
        * distributed traces

    * functionality related

    * meta related
        * standard command line syntax/semantics across services
        * secure access

    * allied tools documentation


C. Process

    Suggested workflow elements:

    * model
        * state use cases 
        * convert use cases to verbs
        * annotate verbs with data model and vocabulary
    * documentation stages
        * proposed
        * draft
        * adopted
        * enhanced
    * documentation reviews
        * focussed
        * formal and crisp
        * history (comments archive)
    * personnel ensuring adherence
        * maintainer of this repository
        * auditor
        * dev. team leads
        * product manager
    * feedback
        * internal
        * external

                                -x-


